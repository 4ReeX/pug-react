// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`case JavaScript output: transformed source code 1`] = `
"const n = 0;

module.exports =
  n === 1 ? (
    <p key=\\"pug:0:0\\">One</p>
  ) : n === 2 ? (
    <p key=\\"pug:1:0\\">Two</p>
  ) : null;
"
`;

exports[`case html output: generated html 1`] = `null`;

exports[`case static html output: static html 1`] = `""`;

exports[`code JavaScript output: transformed source code 1`] = `
"const log = text => text;

module.exports = (log(\\"Hello\\"), null);
"
`;

exports[`code html output: generated html 1`] = `null`;

exports[`code static html output: static html 1`] = `""`;

exports[`code-multiline JavaScript output: transformed source code 1`] = `
"let _greeting;

const log = text => text;

module.exports = (
  <React.Fragment>
    {((_greeting = \\"hello\\"), null)}
    {(log(_greeting), null)}
  </React.Fragment>
);
"
`;

exports[`code-multiline html output: generated html 1`] = `null`;

exports[`code-multiline static html output: static html 1`] = `""`;

exports[`each JavaScript output: transformed source code 1`] = `
"module.exports = ((_pug_nodes, _pug_arr) => {
  if (!(_pug_arr == null || Array.isArray(_pug_arr)))
    throw new Error(
      'Expected \\"[1, 2, 3]\\" to be an array because it is passed to each.'
    );
  if (_pug_arr == null || _pug_arr.length === 0) return undefined;

  for (let _pug_index = 0; _pug_index < _pug_arr.length; _pug_index++) {
    const item = _pug_arr[_pug_index];
    _pug_nodes[_pug_nodes.length] = <div key={\\"pug\\" + item + \\":0\\"}>{item}</div>;
  }

  return _pug_nodes;
})([], [1, 2, 3]);
"
`;

exports[`each html output: generated html 1`] = `
Array [
  <div>
    1
  </div>,
  <div>
    2
  </div>,
  <div>
    3
  </div>,
]
`;

exports[`each static html output: static html 1`] = `"<div>1</div><div>2</div><div>3</div>"`;

exports[`if JavaScript output: transformed source code 1`] = `
"module.exports = false ? <p key=\\"pug:0:0\\">Truthy</p> : null;
"
`;

exports[`if html output: generated html 1`] = `null`;

exports[`if static html output: static html 1`] = `""`;

exports[`while JavaScript output: transformed source code 1`] = `
"let n = 0;

module.exports = (_pug_nodes => {
  while (n < 3) {
    _pug_nodes[_pug_nodes.length] = <div key={n}>{n++}</div>;
  }

  return _pug_nodes;
})([]);
"
`;

exports[`while html output: generated html 1`] = `
Array [
  <div>
    0
  </div>,
  <div>
    1
  </div>,
  <div>
    2
  </div>,
]
`;

exports[`while static html output: static html 1`] = `"<div>0</div><div>1</div><div>2</div>"`;
